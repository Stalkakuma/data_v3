{"version":3,"sources":["components/Table.js","App.js","index.js"],"names":["Table","props","className","name","alt","src","url","App","state","error","isLoaded","items","fetch","then","response","json","result","setState","data","memes","console","log","this","message","map","myMemes","index","id","tevas","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sMAwBeA,MAtBf,SAAeC,GAIZ,OACE,8BACQ,6BACG,+BACA,oBAAIC,UAAU,YAAd,SACCD,EAAME,OAEP,qBACAD,UAAU,YACVE,IAAKH,EAAMG,IACXC,IAAKJ,EAAMK,cC4CZC,E,kDAxDb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,MAAO,IALQ,E,qDAQlB,WAAqB,IAAD,OACnBC,MAAM,qCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MACC,SAACG,GACC,EAAKC,SAAS,CACZP,UAAU,EACVC,MAAOK,EAAOE,KAAKC,QAEnBC,QAAQC,IAAI,QAAQ,EAAKb,MAAMG,UAEnC,SAACF,GACC,EAAKQ,SAAS,CACZP,UAAU,EACVD,e,oBAGV,WACE,MAAmCa,KAAKd,MAAhCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,MA0BzB,OAAIF,EAvBK,0CAAaA,EAAMc,WAwBpBb,EAfJ,8BACGC,EAAMa,KAAI,SAACC,EAASC,GAAV,OACV,cAAC,EAAD,CAEGvB,KAAMsB,EAAQtB,KACdG,IAAKmB,EAAQnB,IACbF,IAAKqB,EAAQE,GACbC,MAAOH,EAAQnB,KAJVmB,EAAQE,SARd,iD,GAlCKE,IAAMC,W,MCCxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1d6ea364.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction Table(props) {\n\n  //console.log(\"passing props\",props)\n\n  \treturn (\n  \t\t <div>\n             <ul>\n                <li> \n                <h1 className=\"memeTitle\">\n                {props.name}\n                </h1>\n                <img \n                className=\"memeImage\"\n                alt={props.alt} \n                src={props.url} /> \n                </li>\n             </ul>\n  \t\t </div>\n  \t\t)\n  \n}\n\nexport default Table","import React from \"react\"\nimport Table from \"./components/Table\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n    };\n  }\n   componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then(response => response.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.data.memes,\n          });\n            console.log(\"items\",this.state.items)\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        })}\n  render() {\n    const { error, isLoaded, items } = this.state;\n\n    const containsErrorMessage = () => {\n      return <div>Error: {error.message}</div>;\n    };\n    \n    const isLoading = () => {\n      return <div>Loading...</div>;\n    };\n    \n    const showMe = () =>{\n      return (\n        <div>\n          {items.map((myMemes, index)=>(\n           <Table \n              key={myMemes.id}\n              name={myMemes.name}\n              url={myMemes.url}\n              alt={myMemes.id}\n              tevas={myMemes.url}\n              />\n            ))}  \n        </div>\n          )\n    }\n\n    if (error) return containsErrorMessage();\n    return !isLoaded ? isLoading() : showMe();\n  }\n}\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./index.css\"\nReactDOM.render(<App />, document.getElementById(\"root\")) "],"sourceRoot":""}